{"version":3,"sources":["streamlit-player.tsx","index.tsx"],"names":["withStreamlitConnection","args","useState","playerEvents","setPlayerEvents","divRef","useRef","useEffect","events","forEach","name","data","Streamlit","setComponentValue","setFrameHeight","options","height","ro","ResizeObserver","current","observe","disconnect","ref","url","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA4DeA,eAlDS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAA2B,EACZC,mBAAS,IADG,mBAC7CC,EAD6C,KAC/BC,EAD+B,KAE9CC,EAASC,iBAAuB,MAoCtC,OAjCAC,qBAAU,WACR,IAAIC,EAAc,GAElBP,EAAKO,OAAOC,SAAQ,SAACC,GACnBF,EAAOE,GAAQ,SAACC,GACdC,IAAUC,kBAAkB,CAC1BH,KAAMA,EACNC,KAAMA,QAKZP,EAAgBI,KACf,CAACP,EAAKO,SAGTD,qBAAU,WAIR,GAHAK,IAAUE,eAAeb,EAAKc,QAAQC,SAGjCf,EAAKc,QAAQC,OAAQ,CACxB,IAAMC,EAAK,IAAIC,KAAe,WAC5BN,IAAUE,oBAOZ,OAJIT,EAAOc,SACTF,EAAGG,QAAQf,EAAOc,SAGb,kBAAMF,EAAGI,iBAEjB,CAACpB,EAAKc,QAAQC,SAGf,yBAAKM,IAAKjB,GACR,kBAAC,IAAD,eACEkB,IAAKtB,EAAKsB,IACVC,MAAM,QACFrB,EACAF,EAAKc,cClDjBU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2fe15bb3.chunk.js","sourcesContent":["import {\n  Streamlit,\n  ComponentProps,\n  withStreamlitConnection\n} from \"streamlit-component-lib\";\nimport React, { useEffect, useRef, useState } from \"react\"\n\nimport ReactPlayer from \"react-player\"\nimport ResizeObserver from \"resize-observer-polyfill\"\n\nconst StreamlitPlayer = ({ args }: ComponentProps) => {\n  const [playerEvents, setPlayerEvents] = useState({})\n  const divRef = useRef<HTMLDivElement>(null)\n\n  // Handle events\n  useEffect(() => {\n    let events: any = {}\n\n    args.events.forEach((name: string) => {\n      events[name] = (data?: any) => {\n        Streamlit.setComponentValue({\n          name: name,\n          data: data\n        })\n      }\n    })\n\n    setPlayerEvents(events)\n  }, [args.events])\n\n  // Handle height\n  useEffect(() => {\n    Streamlit.setFrameHeight(args.options.height)\n\n    // Auto resize if no height is defined\n    if (!args.options.height) {\n      const ro = new ResizeObserver(() => {\n        Streamlit.setFrameHeight()\n      })\n\n      if (divRef.current) {\n        ro.observe(divRef.current)\n      }\n\n      return () => ro.disconnect()\n    }\n  }, [args.options.height])\n\n  return (\n    <div ref={divRef}>\n      <ReactPlayer\n        url={args.url}\n        width=\"100%\"\n        {...playerEvents}\n        {...args.options}\n      />\n    </div>\n  )\n}\n\nexport default withStreamlitConnection(StreamlitPlayer)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StreamlitPlayer from \"./streamlit-player\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitPlayer />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}